{"remainingRequest":"C:\\Users\\hryni\\Desktop\\lab5\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\hryni\\Desktop\\lab5\\src\\views\\Character.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\hryni\\Desktop\\lab5\\src\\views\\Character.vue","mtime":1561040349961},{"path":"C:\\Users\\hryni\\Desktop\\lab5\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\hryni\\Desktop\\lab5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hryni\\Desktop\\lab5\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios';\nimport { mapState, mapGetters} from 'vuex';\nimport FilmsList from '@/components/FilmAppeared';\nimport VehiclesList from '@/components/VehiclesList';\nimport ShipsList from '@/components/StarshipsList'\nexport default {\n  components: {\n    FilmsList,\n    VehiclesList,\n    ShipsList,     \n  },\n\n  computed: {\n    ...mapState(['characters', 'planets', 'species', 'films', 'vehicles', 'starships']),\n    ...mapGetters([\n      'getCharacterByID',\n      'getAllPlanetsIDs',\n      'getAllSpeciesIDs',\n      'getAllVehiclesIDs',\n      'getAllShipsIDs'\n    ]),\n\n    character(){\n      return this.getCharacterByID(this.$route.params.id)\n    },\n\n    homeInfo() {  \n      let pl = this.planets.filter(\n        planet => this.character.homeworld.includes(planet.url)\n      )\n      if (pl.length > 0) {\n        return pl[0].name\n      }       \n    },\n\n    speciesInfo() {\n      return this.species.filter(\n        sp => this.character.species.includes(sp.url)\n      )\n    },\n\n    filmsInfo(){\n      return this.films.filter(\n        film => this.character.films.includes(film.url)\n      )\n    },\n\n    vehiclesInfo() {\n      return this.vehicles.filter(\n        vehicle => this.character.vehicles.includes(vehicle.url)\n      )\n    },\n\n    shipsInfo() {\n      return this.starships.filter(\n        ship => this.character.starships.includes(ship.url)\n      )\n    },\n\n    currentCharacterPlanetsIDs() {\n      let parse_url = this.character.homeworld.split('/');\n      let planet_id = parse_url[parse_url.length - 2]; \n      return planet_id;    \n    },\n\n    nonInPlanetsIDs() {\n      return this.getAllPlanetsIDs.includes(this.currentCharacterPlanetsIDs) ? [] : [this.currentCharacterPlanetsIDs];\n    },\n\n    currentCharacterSpeciesIDs() {\n      return this.character.species.map(\n        url => {\n          let parse_url = url.split('/');\n          let species_id = parse_url[parse_url.length - 2]; \n          return species_id              \n        }\n      )\n    },\n\n    nonInSpeciesIDs() {      \n      return this.currentCharacterSpeciesIDs.filter(\n        id => !this.getAllSpeciesIDs.includes(id)\n      )\n    },\n\n    currentCharacterVehiclesIDs() {\n      return this.character.vehicles.map(\n        url => {\n          let parse_url = url.split('/');\n          let vehicle_id = parse_url[parse_url.length - 2]; \n          return vehicle_id              \n        }\n      )\n    },\n    \n    nonInVehiclesIDs() {\n      return this.currentCharacterVehiclesIDs.filter(\n        id => !this.getAllVehiclesIDs.includes(id)\n      )\n    },\n\n    currentCharacterShipsIDs() {\n      return this.character.starships.map(\n        url => {\n          let parse_url = url.split('/');\n          let ship_id = parse_url[parse_url.length - 2]; \n          return ship_id              \n        }\n      )\n    },\n\n    nonInShipsIDs() {\n      return this.currentCharacterShipsIDs.filter(\n        id => !this.getAllShipsIDs.includes(id)\n      )\n    },\n\n  },\n  \n  async created() {\n\n    if(this.nonInPlanetsIDs.length > 0) {\n      this.$store.dispatch('getPlanets', this.nonInPlanetsIDs)\n    }\n\n    if(this.nonInSpeciesIDs.length > 0) {\n      this.$store.dispatch('getSpecies', this.nonInSpeciesIDs)\n    }\n\n    if(this.nonInVehiclesIDs.length > 0) {\n      this.$store.dispatch('getVehicles', this.nonInVehiclesIDs)\n    }\n\n    if(this.nonInShipsIDs.length > 0) {  \n      this.$store.dispatch('getShips', this.nonInShipsIDs)\n    }    \n  }\n}   \n",{"version":3,"sources":["Character.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"Character.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n      <div class = 'desc'>\n        <h3><b>{{character.name}}</b></h3>        \n        <b>Height:</b> {{character.height}}<br/>\n        <b>Mass:</b> {{character.mass}}<br/>\n        <b>Birth:</b> {{character.birth_year}}<br/>\n        <b>Hair color:</b> {{character.hair_color}}<br/>\n        <b>Skin color:</b> {{character.skin_color}}<br/>\n        <b>Eye color:</b> {{character.eye_color}}<br/>\n        <b>Homeworld:</b> {{homeInfo}}<br/>\n      </div>\n\n      <div  v-if ='character.species && character.species.length > 0' class = \"col\" >            \n        <h4>Species:</h4>      \n          <div v-for=\"(species, index) in speciesInfo\" :key=\"`species_${index}`\" >\n            {{ species.name }}\t\t\t\n          </div>        \n         \n        <div class = \"filmApp\">  \n          <films-list :filmsInfo=\"filmsInfo\"></films-list>            \n        </div> \n\n        <div v-if ='character.vehicles && character.vehicles.length > 0' class = \"vehicle\">            \n          <vehicles-list :vehiclesInfo=\"vehiclesInfo\"></vehicles-list>         \n        </div>\n\n        <div v-if ='character.starships && character.starships.length > 0' class = \"ship\">            \n          <ships-list :shipsInfo=\"shipsInfo\"></ships-list>       \n        </div>   \n      </div>  \n      <router-link class = \"back\" to=\"/\">Back</router-link>\n  </div>\n</template>\n\n\n<script>\nimport axios from 'axios';\nimport { mapState, mapGetters} from 'vuex';\nimport FilmsList from '@/components/FilmAppeared';\nimport VehiclesList from '@/components/VehiclesList';\nimport ShipsList from '@/components/StarshipsList'\nexport default {\n  components: {\n    FilmsList,\n    VehiclesList,\n    ShipsList,     \n  },\n\n  computed: {\n    ...mapState(['characters', 'planets', 'species', 'films', 'vehicles', 'starships']),\n    ...mapGetters([\n      'getCharacterByID',\n      'getAllPlanetsIDs',\n      'getAllSpeciesIDs',\n      'getAllVehiclesIDs',\n      'getAllShipsIDs'\n    ]),\n\n    character(){\n      return this.getCharacterByID(this.$route.params.id)\n    },\n\n    homeInfo() {  \n      let pl = this.planets.filter(\n        planet => this.character.homeworld.includes(planet.url)\n      )\n      if (pl.length > 0) {\n        return pl[0].name\n      }       \n    },\n\n    speciesInfo() {\n      return this.species.filter(\n        sp => this.character.species.includes(sp.url)\n      )\n    },\n\n    filmsInfo(){\n      return this.films.filter(\n        film => this.character.films.includes(film.url)\n      )\n    },\n\n    vehiclesInfo() {\n      return this.vehicles.filter(\n        vehicle => this.character.vehicles.includes(vehicle.url)\n      )\n    },\n\n    shipsInfo() {\n      return this.starships.filter(\n        ship => this.character.starships.includes(ship.url)\n      )\n    },\n\n    currentCharacterPlanetsIDs() {\n      let parse_url = this.character.homeworld.split('/');\n      let planet_id = parse_url[parse_url.length - 2]; \n      return planet_id;    \n    },\n\n    nonInPlanetsIDs() {\n      return this.getAllPlanetsIDs.includes(this.currentCharacterPlanetsIDs) ? [] : [this.currentCharacterPlanetsIDs];\n    },\n\n    currentCharacterSpeciesIDs() {\n      return this.character.species.map(\n        url => {\n          let parse_url = url.split('/');\n          let species_id = parse_url[parse_url.length - 2]; \n          return species_id              \n        }\n      )\n    },\n\n    nonInSpeciesIDs() {      \n      return this.currentCharacterSpeciesIDs.filter(\n        id => !this.getAllSpeciesIDs.includes(id)\n      )\n    },\n\n    currentCharacterVehiclesIDs() {\n      return this.character.vehicles.map(\n        url => {\n          let parse_url = url.split('/');\n          let vehicle_id = parse_url[parse_url.length - 2]; \n          return vehicle_id              \n        }\n      )\n    },\n    \n    nonInVehiclesIDs() {\n      return this.currentCharacterVehiclesIDs.filter(\n        id => !this.getAllVehiclesIDs.includes(id)\n      )\n    },\n\n    currentCharacterShipsIDs() {\n      return this.character.starships.map(\n        url => {\n          let parse_url = url.split('/');\n          let ship_id = parse_url[parse_url.length - 2]; \n          return ship_id              \n        }\n      )\n    },\n\n    nonInShipsIDs() {\n      return this.currentCharacterShipsIDs.filter(\n        id => !this.getAllShipsIDs.includes(id)\n      )\n    },\n\n  },\n  \n  async created() {\n\n    if(this.nonInPlanetsIDs.length > 0) {\n      this.$store.dispatch('getPlanets', this.nonInPlanetsIDs)\n    }\n\n    if(this.nonInSpeciesIDs.length > 0) {\n      this.$store.dispatch('getSpecies', this.nonInSpeciesIDs)\n    }\n\n    if(this.nonInVehiclesIDs.length > 0) {\n      this.$store.dispatch('getVehicles', this.nonInVehiclesIDs)\n    }\n\n    if(this.nonInShipsIDs.length > 0) {  \n      this.$store.dispatch('getShips', this.nonInShipsIDs)\n    }    \n  }\n}   \n</script>\n\n<style lang=\"scss\">\nh3 {\n  color: #3c97ff\n}\n.filmApp, .ship, .vehicle{\n  margin-top:15px;\n  margin-bottom: 10px;\n}\n.desc {\n  margin-bottom: 10px;\n}\n\n.back {  \n  padding: 10px 15px;\n  border: 1px solid whitesmoke;\n  border-radius: 5px;\n  color:white;\n  background-color: #3c97ff;\n  font-size: 20px; \n  margin-top: 15px; \n  \n  &:hover {\n    color: #3c97ff;\n    background-color: white;\n    font-size: 20px;\n  }\n}\n</style>\n"]}]}