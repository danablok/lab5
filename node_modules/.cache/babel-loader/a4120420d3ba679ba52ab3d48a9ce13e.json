{"remainingRequest":"C:\\Users\\hryni\\Desktop\\lab5\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\hryni\\Desktop\\lab5\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\hryni\\Desktop\\lab5\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\hryni\\Desktop\\lab5\\src\\views\\Character.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\hryni\\Desktop\\lab5\\src\\views\\Character.vue","mtime":1561040349961},{"path":"C:\\Users\\hryni\\Desktop\\lab5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hryni\\Desktop\\lab5\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\hryni\\Desktop\\lab5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hryni\\Desktop\\lab5\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\hryni\\\\Desktop\\\\lab5\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _objectSpread from \"C:\\\\Users\\\\hryni\\\\Desktop\\\\lab5\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport { mapState, mapGetters } from 'vuex';\nimport FilmsList from '@/components/FilmAppeared';\nimport VehiclesList from '@/components/VehiclesList';\nimport ShipsList from '@/components/StarshipsList';\nexport default {\n  components: {\n    FilmsList: FilmsList,\n    VehiclesList: VehiclesList,\n    ShipsList: ShipsList\n  },\n  computed: _objectSpread({}, mapState(['characters', 'planets', 'species', 'films', 'vehicles', 'starships']), mapGetters(['getCharacterByID', 'getAllPlanetsIDs', 'getAllSpeciesIDs', 'getAllVehiclesIDs', 'getAllShipsIDs']), {\n    character: function character() {\n      return this.getCharacterByID(this.$route.params.id);\n    },\n    homeInfo: function homeInfo() {\n      var _this = this;\n\n      var pl = this.planets.filter(function (planet) {\n        return _this.character.homeworld.includes(planet.url);\n      });\n\n      if (pl.length > 0) {\n        return pl[0].name;\n      }\n    },\n    speciesInfo: function speciesInfo() {\n      var _this2 = this;\n\n      return this.species.filter(function (sp) {\n        return _this2.character.species.includes(sp.url);\n      });\n    },\n    filmsInfo: function filmsInfo() {\n      var _this3 = this;\n\n      return this.films.filter(function (film) {\n        return _this3.character.films.includes(film.url);\n      });\n    },\n    vehiclesInfo: function vehiclesInfo() {\n      var _this4 = this;\n\n      return this.vehicles.filter(function (vehicle) {\n        return _this4.character.vehicles.includes(vehicle.url);\n      });\n    },\n    shipsInfo: function shipsInfo() {\n      var _this5 = this;\n\n      return this.starships.filter(function (ship) {\n        return _this5.character.starships.includes(ship.url);\n      });\n    },\n    currentCharacterPlanetsIDs: function currentCharacterPlanetsIDs() {\n      var parse_url = this.character.homeworld.split('/');\n      var planet_id = parse_url[parse_url.length - 2];\n      return planet_id;\n    },\n    nonInPlanetsIDs: function nonInPlanetsIDs() {\n      return this.getAllPlanetsIDs.includes(this.currentCharacterPlanetsIDs) ? [] : [this.currentCharacterPlanetsIDs];\n    },\n    currentCharacterSpeciesIDs: function currentCharacterSpeciesIDs() {\n      return this.character.species.map(function (url) {\n        var parse_url = url.split('/');\n        var species_id = parse_url[parse_url.length - 2];\n        return species_id;\n      });\n    },\n    nonInSpeciesIDs: function nonInSpeciesIDs() {\n      var _this6 = this;\n\n      return this.currentCharacterSpeciesIDs.filter(function (id) {\n        return !_this6.getAllSpeciesIDs.includes(id);\n      });\n    },\n    currentCharacterVehiclesIDs: function currentCharacterVehiclesIDs() {\n      return this.character.vehicles.map(function (url) {\n        var parse_url = url.split('/');\n        var vehicle_id = parse_url[parse_url.length - 2];\n        return vehicle_id;\n      });\n    },\n    nonInVehiclesIDs: function nonInVehiclesIDs() {\n      var _this7 = this;\n\n      return this.currentCharacterVehiclesIDs.filter(function (id) {\n        return !_this7.getAllVehiclesIDs.includes(id);\n      });\n    },\n    currentCharacterShipsIDs: function currentCharacterShipsIDs() {\n      return this.character.starships.map(function (url) {\n        var parse_url = url.split('/');\n        var ship_id = parse_url[parse_url.length - 2];\n        return ship_id;\n      });\n    },\n    nonInShipsIDs: function nonInShipsIDs() {\n      var _this8 = this;\n\n      return this.currentCharacterShipsIDs.filter(function (id) {\n        return !_this8.getAllShipsIDs.includes(id);\n      });\n    }\n  }),\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (this.nonInPlanetsIDs.length > 0) {\n                this.$store.dispatch('getPlanets', this.nonInPlanetsIDs);\n              }\n\n              if (this.nonInSpeciesIDs.length > 0) {\n                this.$store.dispatch('getSpecies', this.nonInSpeciesIDs);\n              }\n\n              if (this.nonInVehiclesIDs.length > 0) {\n                this.$store.dispatch('getVehicles', this.nonInVehiclesIDs);\n              }\n\n              if (this.nonInShipsIDs.length > 0) {\n                this.$store.dispatch('getShips', this.nonInShipsIDs);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }()\n};",{"version":3,"sources":["Character.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n      <div class = 'desc'>\n        <h3><b>{{character.name}}</b></h3>        \n        <b>Height:</b> {{character.height}}<br/>\n        <b>Mass:</b> {{character.mass}}<br/>\n        <b>Birth:</b> {{character.birth_year}}<br/>\n        <b>Hair color:</b> {{character.hair_color}}<br/>\n        <b>Skin color:</b> {{character.skin_color}}<br/>\n        <b>Eye color:</b> {{character.eye_color}}<br/>\n        <b>Homeworld:</b> {{homeInfo}}<br/>\n      </div>\n\n      <div  v-if ='character.species && character.species.length > 0' class = \"col\" >            \n        <h4>Species:</h4>      \n          <div v-for=\"(species, index) in speciesInfo\" :key=\"`species_${index}`\" >\n            {{ species.name }}\t\t\t\n          </div>        \n         \n        <div class = \"filmApp\">  \n          <films-list :filmsInfo=\"filmsInfo\"></films-list>            \n        </div> \n\n        <div v-if ='character.vehicles && character.vehicles.length > 0' class = \"vehicle\">            \n          <vehicles-list :vehiclesInfo=\"vehiclesInfo\"></vehicles-list>         \n        </div>\n\n        <div v-if ='character.starships && character.starships.length > 0' class = \"ship\">            \n          <ships-list :shipsInfo=\"shipsInfo\"></ships-list>       \n        </div>   \n      </div>  \n      <router-link class = \"back\" to=\"/\">Back</router-link>\n  </div>\n</template>\n\n\n<script>\nimport axios from 'axios';\nimport { mapState, mapGetters} from 'vuex';\nimport FilmsList from '@/components/FilmAppeared';\nimport VehiclesList from '@/components/VehiclesList';\nimport ShipsList from '@/components/StarshipsList'\nexport default {\n  components: {\n    FilmsList,\n    VehiclesList,\n    ShipsList,     \n  },\n\n  computed: {\n    ...mapState(['characters', 'planets', 'species', 'films', 'vehicles', 'starships']),\n    ...mapGetters([\n      'getCharacterByID',\n      'getAllPlanetsIDs',\n      'getAllSpeciesIDs',\n      'getAllVehiclesIDs',\n      'getAllShipsIDs'\n    ]),\n\n    character(){\n      return this.getCharacterByID(this.$route.params.id)\n    },\n\n    homeInfo() {  \n      let pl = this.planets.filter(\n        planet => this.character.homeworld.includes(planet.url)\n      )\n      if (pl.length > 0) {\n        return pl[0].name\n      }       \n    },\n\n    speciesInfo() {\n      return this.species.filter(\n        sp => this.character.species.includes(sp.url)\n      )\n    },\n\n    filmsInfo(){\n      return this.films.filter(\n        film => this.character.films.includes(film.url)\n      )\n    },\n\n    vehiclesInfo() {\n      return this.vehicles.filter(\n        vehicle => this.character.vehicles.includes(vehicle.url)\n      )\n    },\n\n    shipsInfo() {\n      return this.starships.filter(\n        ship => this.character.starships.includes(ship.url)\n      )\n    },\n\n    currentCharacterPlanetsIDs() {\n      let parse_url = this.character.homeworld.split('/');\n      let planet_id = parse_url[parse_url.length - 2]; \n      return planet_id;    \n    },\n\n    nonInPlanetsIDs() {\n      return this.getAllPlanetsIDs.includes(this.currentCharacterPlanetsIDs) ? [] : [this.currentCharacterPlanetsIDs];\n    },\n\n    currentCharacterSpeciesIDs() {\n      return this.character.species.map(\n        url => {\n          let parse_url = url.split('/');\n          let species_id = parse_url[parse_url.length - 2]; \n          return species_id              \n        }\n      )\n    },\n\n    nonInSpeciesIDs() {      \n      return this.currentCharacterSpeciesIDs.filter(\n        id => !this.getAllSpeciesIDs.includes(id)\n      )\n    },\n\n    currentCharacterVehiclesIDs() {\n      return this.character.vehicles.map(\n        url => {\n          let parse_url = url.split('/');\n          let vehicle_id = parse_url[parse_url.length - 2]; \n          return vehicle_id              \n        }\n      )\n    },\n    \n    nonInVehiclesIDs() {\n      return this.currentCharacterVehiclesIDs.filter(\n        id => !this.getAllVehiclesIDs.includes(id)\n      )\n    },\n\n    currentCharacterShipsIDs() {\n      return this.character.starships.map(\n        url => {\n          let parse_url = url.split('/');\n          let ship_id = parse_url[parse_url.length - 2]; \n          return ship_id              \n        }\n      )\n    },\n\n    nonInShipsIDs() {\n      return this.currentCharacterShipsIDs.filter(\n        id => !this.getAllShipsIDs.includes(id)\n      )\n    },\n\n  },\n  \n  async created() {\n\n    if(this.nonInPlanetsIDs.length > 0) {\n      this.$store.dispatch('getPlanets', this.nonInPlanetsIDs)\n    }\n\n    if(this.nonInSpeciesIDs.length > 0) {\n      this.$store.dispatch('getSpecies', this.nonInSpeciesIDs)\n    }\n\n    if(this.nonInVehiclesIDs.length > 0) {\n      this.$store.dispatch('getVehicles', this.nonInVehiclesIDs)\n    }\n\n    if(this.nonInShipsIDs.length > 0) {  \n      this.$store.dispatch('getShips', this.nonInShipsIDs)\n    }    \n  }\n}   \n</script>\n\n<style lang=\"scss\">\nh3 {\n  color: #3c97ff\n}\n.filmApp, .ship, .vehicle{\n  margin-top:15px;\n  margin-bottom: 10px;\n}\n.desc {\n  margin-bottom: 10px;\n}\n\n.back {  \n  padding: 10px 15px;\n  border: 1px solid whitesmoke;\n  border-radius: 5px;\n  color:white;\n  background-color: #3c97ff;\n  font-size: 20px; \n  margin-top: 15px; \n  \n  &:hover {\n    color: #3c97ff;\n    background-color: white;\n    font-size: 20px;\n  }\n}\n</style>\n"],"sourceRoot":"src/views"}]}