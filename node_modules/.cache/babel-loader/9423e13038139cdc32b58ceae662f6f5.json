{"remainingRequest":"C:\\Users\\hryni\\Desktop\\lab5\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\hryni\\Desktop\\lab5\\src\\store.js","dependencies":[{"path":"C:\\Users\\hryni\\Desktop\\lab5\\src\\store.js","mtime":1560276918000},{"path":"C:\\Users\\hryni\\Desktop\\lab5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hryni\\Desktop\\lab5\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\hryni\\\\Desktop\\\\lab5\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"C:\\\\Users\\\\hryni\\\\Desktop\\\\lab5\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.array.find\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nVue.use(Vuex);\nvar state = {\n  films: [],\n  characters: [],\n  starships: [],\n  planets: [],\n  vehicles: [],\n  species: []\n};\nvar getters = {\n  getFilmByID: function getFilmByID(state) {\n    return function (id) {\n      return state.films.find(function (film) {\n        return film.id === id;\n      });\n    };\n  },\n  getAllCharactersIDs: function getAllCharactersIDs(state) {\n    return state.characters.map(function (ch) {\n      return ch.id;\n    });\n  },\n  getAllShipsIDs: function getAllShipsIDs(state) {\n    return state.starships.map(function (ship) {\n      return ship.id;\n    });\n  },\n  getAllPlanetsIDs: function getAllPlanetsIDs(state) {\n    return state.planets.map(function (planet) {\n      return planet.id;\n    });\n  },\n  getAllVehiclesIDs: function getAllVehiclesIDs(state) {\n    return state.vehicles.map(function (vehicle) {\n      return vehicle.id;\n    });\n  },\n  getAllSpeciesIDs: function getAllSpeciesIDs(state) {\n    return state.species.map(function (sp) {\n      return sp.id;\n    });\n  },\n  getSpeciesByID: function getSpeciesByID(state) {\n    return function (id) {\n      return state.species.find(function (sp) {\n        return sp.id === id;\n      });\n    };\n  },\n  getCharacterByID: function getCharacterByID(state) {\n    return function (id) {\n      return state.characters.find(function (ch) {\n        return ch.id === id;\n      });\n    };\n  }\n};\nvar mutations = {\n  setFilms: function setFilms(state, payload) {\n    return state.films = payload;\n  },\n  setCharacters: function setCharacters(state, payload) {\n    return state.characters = [].concat(_toConsumableArray(state.characters), _toConsumableArray(payload));\n  },\n  setShips: function setShips(state, payload) {\n    return state.starships = [].concat(_toConsumableArray(state.starships), _toConsumableArray(payload));\n  },\n  setPlanets: function setPlanets(state, payload) {\n    return state.planets = [].concat(_toConsumableArray(state.planets), _toConsumableArray(payload));\n  },\n  setVehicles: function setVehicles(state, payload) {\n    return state.vehicles = [].concat(_toConsumableArray(state.vehicles), _toConsumableArray(payload));\n  },\n  setSpecies: function setSpecies(state, payload) {\n    return state.species = [].concat(_toConsumableArray(state.species), _toConsumableArray(payload));\n  }\n};\nvar actions = {\n  getFilms: function () {\n    var _getFilms = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(_ref) {\n      var state, commit, _ref2, data;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              state = _ref.state, commit = _ref.commit;\n              _context.next = 3;\n              return axios.get(\"https://swapi.co/api/films/\");\n\n            case 3:\n              _ref2 = _context.sent;\n              data = _ref2.data;\n              data.results.map(function (film) {\n                var parse_url = film.url.split('/');\n                film.id = parse_url[parse_url.length - 2];\n              });\n              console.log(data.results);\n              commit('setFilms', data.results);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getFilms(_x) {\n      return _getFilms.apply(this, arguments);\n    }\n\n    return getFilms;\n  }(),\n  getCharacters: function () {\n    var _getCharacters = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(_ref3, charactersID) {\n      var state, commit, chDetails, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, ch, _ref4, data;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              state = _ref3.state, commit = _ref3.commit;\n              chDetails = [];\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context2.prev = 5;\n              _iterator = charactersID[Symbol.iterator]();\n\n            case 7:\n              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                _context2.next = 18;\n                break;\n              }\n\n              ch = _step.value;\n              _context2.next = 11;\n              return axios.get(\"https://swapi.co/api/people/\" + ch + \"/\");\n\n            case 11:\n              _ref4 = _context2.sent;\n              data = _ref4.data;\n              chDetails.push(data);\n              chDetails.map(function (character) {\n                var parse_url = character.url.split('/');\n                character.id = parse_url[parse_url.length - 2];\n              });\n\n            case 15:\n              _iteratorNormalCompletion = true;\n              _context2.next = 7;\n              break;\n\n            case 18:\n              _context2.next = 24;\n              break;\n\n            case 20:\n              _context2.prev = 20;\n              _context2.t0 = _context2[\"catch\"](5);\n              _didIteratorError = true;\n              _iteratorError = _context2.t0;\n\n            case 24:\n              _context2.prev = 24;\n              _context2.prev = 25;\n\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n\n            case 27:\n              _context2.prev = 27;\n\n              if (!_didIteratorError) {\n                _context2.next = 30;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 30:\n              return _context2.finish(27);\n\n            case 31:\n              return _context2.finish(24);\n\n            case 32:\n              commit('setCharacters', chDetails);\n\n            case 33:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[5, 20, 24, 32], [25,, 27, 31]]);\n    }));\n\n    function getCharacters(_x2, _x3) {\n      return _getCharacters.apply(this, arguments);\n    }\n\n    return getCharacters;\n  }(),\n  getShips: function () {\n    var _getShips = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(_ref5, shipsID) {\n      var state, commit, shipDetails, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, ship, _ref6, data;\n\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              state = _ref5.state, commit = _ref5.commit;\n              shipDetails = [];\n              _iteratorNormalCompletion2 = true;\n              _didIteratorError2 = false;\n              _iteratorError2 = undefined;\n              _context3.prev = 5;\n              _iterator2 = shipsID[Symbol.iterator]();\n\n            case 7:\n              if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n                _context3.next = 18;\n                break;\n              }\n\n              ship = _step2.value;\n              _context3.next = 11;\n              return axios.get(\"https://swapi.co/api/starships/\" + ship + \"/\");\n\n            case 11:\n              _ref6 = _context3.sent;\n              data = _ref6.data;\n              shipDetails.push(data);\n              shipDetails.map(function (sh) {\n                var parse_url = sh.url.split('/');\n                sh.id = parse_url[parse_url.length - 2];\n              });\n\n            case 15:\n              _iteratorNormalCompletion2 = true;\n              _context3.next = 7;\n              break;\n\n            case 18:\n              _context3.next = 24;\n              break;\n\n            case 20:\n              _context3.prev = 20;\n              _context3.t0 = _context3[\"catch\"](5);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context3.t0;\n\n            case 24:\n              _context3.prev = 24;\n              _context3.prev = 25;\n\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n\n            case 27:\n              _context3.prev = 27;\n\n              if (!_didIteratorError2) {\n                _context3.next = 30;\n                break;\n              }\n\n              throw _iteratorError2;\n\n            case 30:\n              return _context3.finish(27);\n\n            case 31:\n              return _context3.finish(24);\n\n            case 32:\n              commit('setShips', shipDetails);\n\n            case 33:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[5, 20, 24, 32], [25,, 27, 31]]);\n    }));\n\n    function getShips(_x4, _x5) {\n      return _getShips.apply(this, arguments);\n    }\n\n    return getShips;\n  }(),\n  getPlanets: function () {\n    var _getPlanets = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(_ref7, planetsID) {\n      var state, commit, planetDetails, _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, planet, _ref8, data;\n\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              state = _ref7.state, commit = _ref7.commit;\n              planetDetails = [];\n              console.log(\"Planets ID \" + planetsID);\n              _iteratorNormalCompletion3 = true;\n              _didIteratorError3 = false;\n              _iteratorError3 = undefined;\n              _context4.prev = 6;\n              _iterator3 = planetsID[Symbol.iterator]();\n\n            case 8:\n              if (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {\n                _context4.next = 19;\n                break;\n              }\n\n              planet = _step3.value;\n              _context4.next = 12;\n              return axios.get(\"https://swapi.co/api/planets/\" + planet + \"/\");\n\n            case 12:\n              _ref8 = _context4.sent;\n              data = _ref8.data;\n              planetDetails.push(data);\n              planetDetails.map(function (pl) {\n                var parse_url = pl.url.split('/');\n                pl.id = parse_url[parse_url.length - 2];\n              });\n\n            case 16:\n              _iteratorNormalCompletion3 = true;\n              _context4.next = 8;\n              break;\n\n            case 19:\n              _context4.next = 25;\n              break;\n\n            case 21:\n              _context4.prev = 21;\n              _context4.t0 = _context4[\"catch\"](6);\n              _didIteratorError3 = true;\n              _iteratorError3 = _context4.t0;\n\n            case 25:\n              _context4.prev = 25;\n              _context4.prev = 26;\n\n              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                _iterator3.return();\n              }\n\n            case 28:\n              _context4.prev = 28;\n\n              if (!_didIteratorError3) {\n                _context4.next = 31;\n                break;\n              }\n\n              throw _iteratorError3;\n\n            case 31:\n              return _context4.finish(28);\n\n            case 32:\n              return _context4.finish(25);\n\n            case 33:\n              commit('setPlanets', planetDetails);\n\n            case 34:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[6, 21, 25, 33], [26,, 28, 32]]);\n    }));\n\n    function getPlanets(_x6, _x7) {\n      return _getPlanets.apply(this, arguments);\n    }\n\n    return getPlanets;\n  }(),\n  getVehicles: function () {\n    var _getVehicles = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5(_ref9, vehiclesID) {\n      var state, commit, vehicleDetails, _iteratorNormalCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, vehicle, _ref10, data;\n\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              state = _ref9.state, commit = _ref9.commit;\n              vehicleDetails = [];\n              _iteratorNormalCompletion4 = true;\n              _didIteratorError4 = false;\n              _iteratorError4 = undefined;\n              _context5.prev = 5;\n              _iterator4 = vehiclesID[Symbol.iterator]();\n\n            case 7:\n              if (_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done) {\n                _context5.next = 18;\n                break;\n              }\n\n              vehicle = _step4.value;\n              _context5.next = 11;\n              return axios.get(\"https://swapi.co/api/vehicles/\" + vehicle + \"/\");\n\n            case 11:\n              _ref10 = _context5.sent;\n              data = _ref10.data;\n              vehicleDetails.push(data);\n              vehicleDetails.map(function (vh) {\n                var parse_url = vh.url.split('/');\n                vh.id = parse_url[parse_url.length - 2];\n              });\n\n            case 15:\n              _iteratorNormalCompletion4 = true;\n              _context5.next = 7;\n              break;\n\n            case 18:\n              _context5.next = 24;\n              break;\n\n            case 20:\n              _context5.prev = 20;\n              _context5.t0 = _context5[\"catch\"](5);\n              _didIteratorError4 = true;\n              _iteratorError4 = _context5.t0;\n\n            case 24:\n              _context5.prev = 24;\n              _context5.prev = 25;\n\n              if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n                _iterator4.return();\n              }\n\n            case 27:\n              _context5.prev = 27;\n\n              if (!_didIteratorError4) {\n                _context5.next = 30;\n                break;\n              }\n\n              throw _iteratorError4;\n\n            case 30:\n              return _context5.finish(27);\n\n            case 31:\n              return _context5.finish(24);\n\n            case 32:\n              commit('setVehicles', vehicleDetails);\n\n            case 33:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[5, 20, 24, 32], [25,, 27, 31]]);\n    }));\n\n    function getVehicles(_x8, _x9) {\n      return _getVehicles.apply(this, arguments);\n    }\n\n    return getVehicles;\n  }(),\n  getSpecies: function () {\n    var _getSpecies = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee6(_ref11, speciesID) {\n      var state, commit, speciesDetails, _iteratorNormalCompletion5, _didIteratorError5, _iteratorError5, _iterator5, _step5, sp, _ref12, data;\n\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              state = _ref11.state, commit = _ref11.commit;\n              speciesDetails = [];\n              _iteratorNormalCompletion5 = true;\n              _didIteratorError5 = false;\n              _iteratorError5 = undefined;\n              _context6.prev = 5;\n              _iterator5 = speciesID[Symbol.iterator]();\n\n            case 7:\n              if (_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done) {\n                _context6.next = 18;\n                break;\n              }\n\n              sp = _step5.value;\n              _context6.next = 11;\n              return axios.get(\"https://swapi.co/api/species/\" + sp + \"/\");\n\n            case 11:\n              _ref12 = _context6.sent;\n              data = _ref12.data;\n              speciesDetails.push(data);\n              speciesDetails.map(function (spec) {\n                var parse_url = spec.url.split('/');\n                spec.id = parse_url[parse_url.length - 2];\n              });\n\n            case 15:\n              _iteratorNormalCompletion5 = true;\n              _context6.next = 7;\n              break;\n\n            case 18:\n              _context6.next = 24;\n              break;\n\n            case 20:\n              _context6.prev = 20;\n              _context6.t0 = _context6[\"catch\"](5);\n              _didIteratorError5 = true;\n              _iteratorError5 = _context6.t0;\n\n            case 24:\n              _context6.prev = 24;\n              _context6.prev = 25;\n\n              if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n                _iterator5.return();\n              }\n\n            case 27:\n              _context6.prev = 27;\n\n              if (!_didIteratorError5) {\n                _context6.next = 30;\n                break;\n              }\n\n              throw _iteratorError5;\n\n            case 30:\n              return _context6.finish(27);\n\n            case 31:\n              return _context6.finish(24);\n\n            case 32:\n              commit('setSpecies', speciesDetails);\n\n            case 33:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[5, 20, 24, 32], [25,, 27, 31]]);\n    }));\n\n    function getSpecies(_x10, _x11) {\n      return _getSpecies.apply(this, arguments);\n    }\n\n    return getSpecies;\n  }()\n};\nexport default new Vuex.Store({\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n});",{"version":3,"sources":["C:\\Users\\hryni\\Desktop\\lab5\\src\\store.js"],"names":["Vue","Vuex","axios","use","state","films","characters","starships","planets","vehicles","species","getters","getFilmByID","id","find","film","getAllCharactersIDs","map","ch","getAllShipsIDs","ship","getAllPlanetsIDs","planet","getAllVehiclesIDs","vehicle","getAllSpeciesIDs","sp","getSpeciesByID","getCharacterByID","mutations","setFilms","payload","setCharacters","setShips","setPlanets","setVehicles","setSpecies","actions","getFilms","commit","get","data","results","parse_url","url","split","length","console","log","getCharacters","charactersID","chDetails","push","character","getShips","shipsID","shipDetails","sh","getPlanets","planetsID","planetDetails","pl","getVehicles","vehiclesID","vehicleDetails","vh","getSpecies","speciesID","speciesDetails","spec","Store"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios'\n\n\nVue.use(Vuex);\n\nconst state = {\n  films: [],\n  characters: [],\n  starships: [],\n  planets: [],\n  vehicles: [],\n  species: [],\n};\nconst getters = {\n\n  getFilmByID: state => id => state.films.find(film => film.id === id),\n\n  getAllCharactersIDs: state => state.characters.map(ch => ch.id),\n\n  getAllShipsIDs: state => state.starships.map(ship => ship.id),\n\n  getAllPlanetsIDs: state => state.planets.map(planet => planet.id),\n\n  getAllVehiclesIDs:state => state.vehicles.map(vehicle => vehicle.id),\n\n  getAllSpeciesIDs: state => state.species.map(sp => sp.id),\n\n  getSpeciesByID: state => id => state.species.find(sp => sp.id === id),\n\n  getCharacterByID: state => id => state.characters.find(ch => ch.id === id),\n\n};\n\nconst mutations = {\n  setFilms: (state, payload) => (state.films = payload),\n  setCharacters: (state, payload) => (state.characters = [...state.characters, ...payload]),\n  setShips: (state, payload) => (state.starships = [...state.starships, ...payload]),\n  setPlanets: (state, payload) => (state.planets = [...state.planets, ...payload]),\n  setVehicles: (state, payload) => (state.vehicles = [...state.vehicles, ...payload]),\n  setSpecies: (state, payload) => (state.species = [...state.species, ...payload]),  \n};\n\nconst actions = {\n  async getFilms ({state, commit}) {\n    const {data} = await axios.get(\"https://swapi.co/api/films/\");\n    data.results.map(film => {\n      let parse_url = film.url.split('/');\n      film.id = parse_url[parse_url.length - 2];        \n    });\n    console.log(data.results);\n    commit('setFilms', data.results) \n  },\n\n  async getCharacters ({state, commit}, charactersID) {   \n    let chDetails = [];\n    for (let ch of charactersID) {\n      const {data} = await axios.get(\"https://swapi.co/api/people/\" + ch + \"/\")\n      chDetails.push(data) \n      chDetails.map(character => {\n        let parse_url = character.url.split('/');\n        character.id = parse_url[parse_url.length - 2];\n      })         \n    }\n    commit('setCharacters', chDetails)    \n  },\n\n  async getShips ({state, commit}, shipsID) {   \n    let shipDetails = [];\n    for (let ship of shipsID) {\n      const {data} = await axios.get(\"https://swapi.co/api/starships/\" + ship + \"/\")\n      shipDetails.push(data) \n      shipDetails.map(sh => {\n        let parse_url = sh.url.split('/');\n        sh.id = parse_url[parse_url.length - 2];\n      })         \n    }\n    commit('setShips', shipDetails)    \n  },\n\n  async getPlanets ({state, commit}, planetsID) {   \n    let planetDetails = [];    \n    console.log(\"Planets ID \" + planetsID);\n    for (let planet of planetsID) {\n      const {data} = await axios.get(\"https://swapi.co/api/planets/\" + planet + \"/\")\n      planetDetails.push(data) \n      planetDetails.map(pl => {\n        let parse_url = pl.url.split('/');\n        pl.id = parse_url[parse_url.length - 2];\n      })         \n    }\n    commit('setPlanets', planetDetails)    \n  },\n\n  async getVehicles ({state, commit}, vehiclesID) {   \n    let vehicleDetails = [];    \n    for (let vehicle of vehiclesID) {\n      const {data} = await axios.get(\"https://swapi.co/api/vehicles/\" + vehicle + \"/\")\n      vehicleDetails.push(data) \n      vehicleDetails.map(vh => {\n        let parse_url = vh.url.split('/');\n        vh.id = parse_url[parse_url.length - 2];\n      })         \n    }\n    commit('setVehicles',vehicleDetails)    \n  },\n\n  async getSpecies ({state, commit}, speciesID) {   \n    let speciesDetails = [];    \n    for (let sp of speciesID) {\n      const {data} = await axios.get(\"https://swapi.co/api/species/\" + sp + \"/\")\n      speciesDetails.push(data) \n      speciesDetails.map(spec => {\n        let parse_url = spec.url.split('/');\n        spec.id = parse_url[parse_url.length - 2];\n      })         \n    }\n    commit('setSpecies', speciesDetails)    \n  },\n  \n};\n\nexport default new Vuex.Store({\n  state,\n  getters,\n  mutations,\n  actions,  \n})\n"]}]}