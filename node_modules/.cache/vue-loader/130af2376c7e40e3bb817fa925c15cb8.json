{"remainingRequest":"C:\\Users\\hryni\\Desktop\\lab5\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\hryni\\Desktop\\lab5\\src\\views\\Film.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\hryni\\Desktop\\lab5\\src\\views\\Film.vue","mtime":1561040349955},{"path":"C:\\Users\\hryni\\Desktop\\lab5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hryni\\Desktop\\lab5\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\hryni\\Desktop\\lab5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hryni\\Desktop\\lab5\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios';\nimport { mapState, mapGetters} from 'vuex';\nimport CharacterList from '@/components/CharacterList';\nimport SpeciesList from '@/components/SpeciesList';\nimport ShipsList from '@/components/StarshipsList';\nimport VehiclesList from '@/components/VehiclesList';\nimport PlanetsList from '@/components/PlanetsList';\nexport default { \n  components: {    \n      CharacterList, \n      SpeciesList, \n      ShipsList,\n      VehiclesList,\n      PlanetsList\n  },\n\n  computed: {\n    ...mapState(['films', 'characters', 'starships', 'planets', 'vehicles', 'species']),\n    ...mapGetters([\n      'getFilmByID',\n      'getAllCharactersIDs',\n      'getAllShipsIDs',\n      'getAllPlanetsIDs',\n      'getAllVehiclesIDs',\n      'getAllSpeciesIDs',\n    ]),\n\n    film() {\n      return this.getFilmByID(this.$route.params.id)\n    },\n\n    characterDetails() {\n      return this.characters.filter(\n        ch => this.film.characters.includes(ch.url)\n      )\n    },\n\n    shipsInfo() {\n      return this.starships.filter(\n        ship => this.film.starships.includes(ship.url)\n      )\n    },\n\n    planetsInfo() {\n      return this.planets.filter(\n        planet => this.film.planets.includes(planet.url)\n      )\n    },\n\n    vehiclesInfo() {\n      return this.vehicles.filter(\n        vehicle => this.film.vehicles.includes(vehicle.url)\n      )\n    },\n\n    speciesDetails() {\n      return this.species.filter(\n        sp => this.film.species.includes(sp.url)\n      )\n    },\n\n\n    currentFilmCharactersIDs() {\n      return this.film.characters.map(\n        url => {\n          let parse_url = url.split('/');\n          let ch_id = parse_url[parse_url.length - 2]; \n          return ch_id              \n        }\n      )\n    },\n\n    nonInCharactersIDs() {\n        return this.currentFilmCharactersIDs.filter(\n        id => !this.getAllCharactersIDs.includes(id)\n      )\n    },\n\n    currentFilmShipsIDs() {\n      return this.film.starships.map(\n        url => {\n          let parse_url = url.split('/');\n          let ship_id = parse_url[parse_url.length - 2]; \n          return ship_id              \n        }\n      )\n    },\n\n    nonInShipsIDs() {\n      return this.currentFilmShipsIDs.filter(\n        id => !this.getAllShipsIDs.includes(id)\n      )\n    },\n\n    currentFilmPlanetsIDs() {\n      return this.film.planets.map(\n        url => {\n          let parse_url = url.split('/');\n          let planet_id = parse_url[parse_url.length - 2]; \n          return planet_id              \n        }\n      )\n    },\n\n    nonInPlanetsIDs() {\n      return this.currentFilmPlanetsIDs.filter(\n        id => !this.getAllPlanetsIDs.includes(id)\n      )\n    },\n    currentFilmVehiclesIDs() {\n      return this.film.vehicles.map(\n        url => {\n          let parse_url = url.split('/');\n          let vehicle_id = parse_url[parse_url.length - 2]; \n          return vehicle_id              \n        }\n      )\n    },\n    \n    nonInVehiclesIDs() {\n      return this.currentFilmVehiclesIDs.filter(\n        id => !this.getAllVehiclesIDs.includes(id)\n      )\n    },\n\n    currentFilmSpeciesIDs() {\n      return this.film.species.map(\n        url => {\n          let parse_url = url.split('/');\n          let species_id = parse_url[parse_url.length - 2]; \n          return species_id              \n        }\n      )\n    },\n\n    nonInSpeciesIDs() {      \n      return this.currentFilmSpeciesIDs.filter(\n        id => !this.getAllSpeciesIDs.includes(id)\n      )\n    },\n\n  },\n  \n  async created() {\n    if(this.nonInCharactersIDs.length > 0) {    \n      this.$store.dispatch('getCharacters', this.nonInCharactersIDs)\n    }\n    if(this.nonInShipsIDs.length > 0) {  \n      this.$store.dispatch('getShips', this.nonInShipsIDs)\n    }\n    if(this.nonInPlanetsIDs.length > 0) {\n      console.log('Non ' + this.nonInPlanetsIDs); \n      this.$store.dispatch('getPlanets', this.nonInPlanetsIDs)\n    }\n    if(this.nonInVehiclesIDs.length > 0) {\n      this.$store.dispatch('getVehicles', this.nonInVehiclesIDs)\n    }\n    if(this.nonInSpeciesIDs.length > 0) {\n    this.$store.dispatch('getSpecies', this.nonInSpeciesIDs)\n    }\n  }  \n}\n",{"version":3,"sources":["Film.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"Film.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n        <h3><b>{{film.title}}</b></h3>\n        <p v-if=\"film.director\">\n        <b>Director:</b> {{film.director}}<br/>\n        <b>Released:</b> {{film.release_date}}<br/>\n        </p>     \n        <div class = \"crawl\">\n          {{film.opening_crawl}}\n        </div>   \n        <div class=\"characters\">\n\t  \t      <character-list :details=\"characterDetails\"></character-list>\n\t      </div>\n\n        <div class=\"wrapper\">\n          <div class=\"row\">\n            <div class = \"col\" >     \n              <ships-list :shipsInfo=\"shipsInfo\"></ships-list>  \n            </div>            \n                  \n            <div class = \"col\">\n              <planets-list :planetsInfo=\"planetsInfo\"></planets-list>          \n            </div>\n\n            <div class = \"col\" v-if ='film.vehicles && film.vehicles.length > 0' >\n              <vehicles-list :vehiclesInfo=\"vehiclesInfo\"></vehicles-list>         \n            </div>\n          </div>\n        </div>\n        \n        <div class=\"row\">\n\t  \t      <species-list :speciesInfo=\"speciesDetails\"></species-list>\n\t      </div>\n        <p/>\n        <router-link class = \"back\" to=\"/\">Back</router-link>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { mapState, mapGetters} from 'vuex';\nimport CharacterList from '@/components/CharacterList';\nimport SpeciesList from '@/components/SpeciesList';\nimport ShipsList from '@/components/StarshipsList';\nimport VehiclesList from '@/components/VehiclesList';\nimport PlanetsList from '@/components/PlanetsList';\nexport default { \n  components: {    \n      CharacterList, \n      SpeciesList, \n      ShipsList,\n      VehiclesList,\n      PlanetsList\n  },\n\n  computed: {\n    ...mapState(['films', 'characters', 'starships', 'planets', 'vehicles', 'species']),\n    ...mapGetters([\n      'getFilmByID',\n      'getAllCharactersIDs',\n      'getAllShipsIDs',\n      'getAllPlanetsIDs',\n      'getAllVehiclesIDs',\n      'getAllSpeciesIDs',\n    ]),\n\n    film() {\n      return this.getFilmByID(this.$route.params.id)\n    },\n\n    characterDetails() {\n      return this.characters.filter(\n        ch => this.film.characters.includes(ch.url)\n      )\n    },\n\n    shipsInfo() {\n      return this.starships.filter(\n        ship => this.film.starships.includes(ship.url)\n      )\n    },\n\n    planetsInfo() {\n      return this.planets.filter(\n        planet => this.film.planets.includes(planet.url)\n      )\n    },\n\n    vehiclesInfo() {\n      return this.vehicles.filter(\n        vehicle => this.film.vehicles.includes(vehicle.url)\n      )\n    },\n\n    speciesDetails() {\n      return this.species.filter(\n        sp => this.film.species.includes(sp.url)\n      )\n    },\n\n\n    currentFilmCharactersIDs() {\n      return this.film.characters.map(\n        url => {\n          let parse_url = url.split('/');\n          let ch_id = parse_url[parse_url.length - 2]; \n          return ch_id              \n        }\n      )\n    },\n\n    nonInCharactersIDs() {\n        return this.currentFilmCharactersIDs.filter(\n        id => !this.getAllCharactersIDs.includes(id)\n      )\n    },\n\n    currentFilmShipsIDs() {\n      return this.film.starships.map(\n        url => {\n          let parse_url = url.split('/');\n          let ship_id = parse_url[parse_url.length - 2]; \n          return ship_id              \n        }\n      )\n    },\n\n    nonInShipsIDs() {\n      return this.currentFilmShipsIDs.filter(\n        id => !this.getAllShipsIDs.includes(id)\n      )\n    },\n\n    currentFilmPlanetsIDs() {\n      return this.film.planets.map(\n        url => {\n          let parse_url = url.split('/');\n          let planet_id = parse_url[parse_url.length - 2]; \n          return planet_id              \n        }\n      )\n    },\n\n    nonInPlanetsIDs() {\n      return this.currentFilmPlanetsIDs.filter(\n        id => !this.getAllPlanetsIDs.includes(id)\n      )\n    },\n    currentFilmVehiclesIDs() {\n      return this.film.vehicles.map(\n        url => {\n          let parse_url = url.split('/');\n          let vehicle_id = parse_url[parse_url.length - 2]; \n          return vehicle_id              \n        }\n      )\n    },\n    \n    nonInVehiclesIDs() {\n      return this.currentFilmVehiclesIDs.filter(\n        id => !this.getAllVehiclesIDs.includes(id)\n      )\n    },\n\n    currentFilmSpeciesIDs() {\n      return this.film.species.map(\n        url => {\n          let parse_url = url.split('/');\n          let species_id = parse_url[parse_url.length - 2]; \n          return species_id              \n        }\n      )\n    },\n\n    nonInSpeciesIDs() {      \n      return this.currentFilmSpeciesIDs.filter(\n        id => !this.getAllSpeciesIDs.includes(id)\n      )\n    },\n\n  },\n  \n  async created() {\n    if(this.nonInCharactersIDs.length > 0) {    \n      this.$store.dispatch('getCharacters', this.nonInCharactersIDs)\n    }\n    if(this.nonInShipsIDs.length > 0) {  \n      this.$store.dispatch('getShips', this.nonInShipsIDs)\n    }\n    if(this.nonInPlanetsIDs.length > 0) {\n      console.log('Non ' + this.nonInPlanetsIDs); \n      this.$store.dispatch('getPlanets', this.nonInPlanetsIDs)\n    }\n    if(this.nonInVehiclesIDs.length > 0) {\n      this.$store.dispatch('getVehicles', this.nonInVehiclesIDs)\n    }\n    if(this.nonInSpeciesIDs.length > 0) {\n    this.$store.dispatch('getSpecies', this.nonInSpeciesIDs)\n    }\n  }  \n}\n</script>\n\n<style lang=\"scss\">\nh3 {\n  color: #3c97ff;\n}\n\n.wrapper {\n  max-width: 100%;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  padding: 0px 15px ;\n  text-align: center;  \n}\n\n.wrapper .col {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n}\n\n.crawl {\n  margin: 10px;\n  text-align: justify;\n}\n\n.back {  \n  padding: 10px 15px;\n  border: 1px solid whitesmoke;\n  border-radius: 5px;\n  color:white;\n  background-color: #3c97ff;\n  font-size: 20px;  \n  \n  &:hover {\n    color: #3c97ff;\n    background-color: white;\n    font-size: 20px;\n  }\n}\n</style>\n"]}]}